>>Code : Mirror Image Number Pattern
Send Feedback
Print the following pattern for the given N number of rows.
Pattern for N = 4




The dots represent spaces.


Input format :
Integer N (Total no. of rows)
Output format :
Pattern in N lines
Constraints
0 <= N <= 50
Sample Input 1:
3
Sample Output 1:
     1 
    12
   123
Sample Input 2:
4
Sample Output 2:
   1 
  12
 123
1234


import java.util.*;
public class solution{
public static void main(String[] args){
Scanner s=new Scanner(System.in);
int n=s.nextInt();
int i=1;
while(i<=n){
int start=1;
int j=1;
while(j<=n-i){
Sout(""); //without ln
j++;
while(j<=n){
Sout(start):
start++;
j++;
}
sout(); //with ln
i++;
}
}
}


>>Code : Inverted Number Pattern
Send Feedback
Print the following pattern for the given N number of rows.
Pattern for N = 4
4444
333
22
1
Input format :
Integer N (Total no. of rows)
Output format :
Pattern in N lines
Constraints :
0 <= N <= 50
Sample Input 1:
5
Sample Output 1:
55555 
4444
333
22
1
Sample Input 2:
6
Sample Output 2:
666666
55555 
4444
333
22
1


import java.util.*;
public class solution{
public static void main(String[] args){
Scanner s = new Scanner(System.in);
int n=s.nextInt();
int i=1;
while(i<=n){
int j=n-i+1;
int num =j;
while(j>0){
sout(num); //without ln
j--;
sout(); //with ln
i++;
}
}
}


>>Code : Star Pattern
Send Feedback
Print the following pattern
Pattern for N = 4



The dots represent spaces.



Input Format :
N (Total no. of rows)
Output Format :
Pattern in N lines
Constraints :
0 <= N <= 50
Sample Input 1 :
3
Sample Output 1 :
   *
  *** 
 *****
Sample Input 2 :
4
Sample Output 2 :
    *
   *** 
  *****
 *******


import java.util.*;
public class solution{
public static void main(String[] args){
Scanner s=new Scanner(System.in);
int n=s.nextInt();
int i=1;
while(i<=n){
int j=n-i;
while(j>=1){
sout(" "); //without ln
j--;
}
int k=1;
while(k<=2*i-1){
sout("*"); //weithout ln
k++;
}
sout(); //with ln
i++;
}
}
}


>>Print the following pattern for the given number of rows.
Pattern for N = 4



The dots represent spaces.



Input format :
Integer N (Total no. of rows)
Output format :
Pattern in N lines
Constraints :
0 <= N <= 50
Sample Input 1:
5
Sample Output 1:
           1
          232
         34543
        4567654
       567898765
Sample Input 2:
4
Sample Output 2:
           1
          232
         34543
        4567654


import java.util.Scanner;
public static Main{
public static void main(Strings[] args){
Scanner s=new Scanner(Sysytem.in);
int n=s.nextInt();
int i=1;
while(i<=n){
int a=1;
while(a<=n-i){
System.out.print("");
a++;
}
int b=1;
int c=i;
while(b<=i)
{
System.out.print(c);
c++;
b++;
}
b=1;
p=(i-1)*2;
while(b<=i-1)
{
System.out.print(c);
c--;
b++;
}
i++;
System.out.println():
}
}
}


>>Print the following pattern for the given number of rows.
Note: N is always odd.


Pattern for N = 5



The dots represent spaces.



Input format :
N (Total no. of rows and can only be odd)
Output format :
Pattern in N lines
Constraints :
1 <= N <= 49
Sample Input 1:
5
Sample Output 1:
  *
 ***
*****
 ***
  *
Sample Input 2:
3
Sample Output 2:
  *
 ***
  *

import java.util.Scanner;
public class Main{
public static void main(String[] args){
Scanner s=new Scanner(System.in);
int n=s.nextInt();
int num=(n/2)+1;
int count=num-1;
for(int i=1;i<=num;i++){
for(int j=1;j<=count;j++){
System.out.print(""):
}
count--;
for(int k=1;k<=(2*i)-1;k++){
System.out.print("*");
}
System.out.println("");
}
count=1;
for(int i=1;i<=(num-1);i++){
for(int j=1;j<=count;j++){
System.out.print("");
}
count++;
for(int k=1;k<=(2*(num-i))-1;k++){
System.out.print("*");
}
System.out.println("");
}
}
}



>>Write a program to print N number of rows for Half Diamond pattern using stars and numbers
Note : There are no spaces between the characters in a single line.


Input Format :
A single integer: N
Output Format :
Required Pattern
Constraints :
0 <= N <= 50
Sample Input 1 :
3
Sample Output 1 :
*
*1*
*121*
*12321*
*121*
*1*
*
Sample Input 2 :
 5
Sample Output 2 :
*
*1*
*121*
*12321*
*1234321*
*123454321*
*1234321*
*12321*
*121*
*1*
*


import java.util.Scanner;
public class Main{
public static void main(String[] args){
Scanner s=new Scanner(System.in);
int n=s.nextInt();
System.out.println("*");
for(int i=1;i<=n;i++){
int j=1;
System.out.print("*");
while(j<=i)
{
System.out.print(j);
j++;
}
j--;
while(--j>=10
{
System.out.print(j);
}
System.out.println("*");
}
for(int i=n-1;i>=1;i--){
int j=1;
System.out.print("*");
while(j<=i){
System.out.print(j);
j++;
}
j--;
while(--j>1)
{
System.out.print(j);
}
System.out.println("*");
}
System.out.println("*");
}
}



>>Parallelogram Pattern
Send Feedback
Write a program to print parallelogram pattern for the given N number of rows.
For N = 4



The dots represent spaces.
Input Format :
 A single integer : N
Output Format :
Required Pattern
Constraints :
0 <= N <= 50
Sample Input 1 :
3
Sample Output 1 :
***
 ***
  ***
Sample Input 2 :
5
Sample Output 2 :
*****
 *****
  *****
   *****
    *****


import java.util.Scanner;
public class Main{
public static void main(String[] args){
Scanner s=new Scanner(System.in);
int n=s.nextInt();
for(int i=1;i<=n;i++){
for(int j=2;j<=i;j++){
System.out.print("");
}
for(int j=1;j<=n;j++){
System.out.print("*");
}
for(int j=1;j<=n;j++){
System.out.print("*");
}
System.out.println();
}
}
}




>>Write a program to print triangle of user defined integers sum.
Input Format :
A single integer, N
Output Format :
Required Pattern
Constraints :
0 <= N <= 50
Sample Input 1 :
3
Sample Output 1 :
1=1
1+2=3
1+2+3=6
Sample Input 2 :
 5
Sample Output 2 :
1=1
1+2=3
1+2+3=6
1+2+3+4=10
1+2+3+4+5=15



import java.util.*;
public class Main{
public claass void main(String[] args){
Scanner s=new Scanner(System.in);
int n=s.nextInt();
int i,j,num;
for (i=1;i<=n;i++){
num=1;
int sum=0;
for(j=1;j<=i;j++){
System.out.print(num+"");
sum=sum+num;
if(num<i){
System.out.print("+");
}
num++;
}
System.out.print("="+sum);
System.out.println();
}
}
}



>>Write a program to print the pattern for the given N number of rows.
For N = 4
1357
3571
5713
7135
Input Format :
A single integer: N
Output Format :
Required Pattern
Constraints :
0 <= N <= 50
Sample Input 1 :
3
Sample Output 1 :
135
351
513
Sample Input 2 :
 5
Sample Output 2 :
13579
35791
57913
79135
91357

import java.util.*;
public class Main{
public static void main(String[] args){
Scanner s=new Scanner(System.in);
int n=s.nextInt();
for(int i=1;i<=n;i++){
for(int j=i-1;j<n;j++){
System.out.print(j*2+1+"");
}
for(int k=0;k<i-1;k++)
{
System.out.print(k*2+1+"")
}
System.out.println();
}
}
}
